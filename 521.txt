class Solution:
    def findLUSlength(self, a, b):
        """
        :type a: str
        :type b: str
        :rtype: int
        """
        sub_a=[]
        sub_b=[]
        for i in range(len(a)):
            temp=str(a[i])
            sub_a.append(temp)
            for j in range(i+1,len(a)):
                temp+=str(a[j])
                sub_a.append(temp)
        sub_a=set(sub_a)
        
        for i in range(len(b)):
            temp=str(b[i])
            sub_b.append(temp)
            for j in range(i+1,len(b)):
                temp+=str(b[j])
                sub_b.append(temp)
        sub_b=set(sub_b)
        if len(a)>len(b):
            if a not in sub_b:
                return len(a)
        elif len(a)<len(b):
            if b not in sub_a:
                return len(b)
        elif len(a)==len(b) and a!=b:
            return len(a)
        else:
            return (-1)

class Solution:
    def findLUSlength(self, a, b):
        """
        :type a: str
        :type b: str
        :rtype: int
        """
        c=max(len(a),len(b))
        if a==b:
            return -1
        else:
            return c